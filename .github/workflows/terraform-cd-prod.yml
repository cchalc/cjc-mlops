# This GitHub workflow deploys Terraform resources (ML resource config and more)
# defined under cjc_mlops/terraform/prod, when PRs are merged into the release branch
name: Terraform Deployment for cjc_mlops Prod

on:
  push:
    branches:
      - 'release'
    paths:
      - 'cjc_mlops/terraform/**'
  workflow_dispatch:

defaults:
  run:
    working-directory: ./cjc_mlops/terraform

jobs:
  prod:
    concurrency: cjc_mlops-prod-terraform-job
    runs-on: ubuntu-20.04
    env:
      DATABRICKS_HOST: https://adb-6801412720360756.16.azuredatabricks.net
      
    steps:
      - uses: actions/checkout@v3
      - name: Generate AAD Token
        run: ../../.github/workflows/scripts/generate-aad-token.sh ${{ secrets.prodAzureSpTenantId }} ${{ secrets.prodAzureSpApplicationId }} ${{ secrets.prodAzureSpClientSecret }}
      - uses: hashicorp/setup-terraform@v1
      - name: Terraform fmt
        id: fmt
        run: terraform -chdir=prod fmt -check
        continue-on-error: true
      - name: Configure Terraform state backend authentication
        run: |
          echo "ARM_ACCESS_KEY=${{secrets.ARM_ACCESS_KEY}}" >> "$GITHUB_ENV"
      - name: Terraform Init
        id: init
        run: terraform -chdir=prod init
      - name: Terraform Validate
        id: validate
        run: terraform -chdir=prod validate
      - name: Terraform Plan
        id: plan
        run: |
          terraform -chdir=prod plan -no-color \
          -var="git_repo_url=${{ github.server_url }}/${{ github.repository }}"
      - name: Terraform Apply
        id: apply
        run: |
          terraform -chdir=prod apply -auto-approve \
          -var="git_repo_url=${{ github.server_url }}/${{ github.repository }}"
      - name: Terraform Output
        id: output
        run: terraform -chdir=prod output -json
      - name: Commit Terraform Output to File
        id: commit
        run: |
          git pull
          mkdir -p output
          echo '${{ steps.output.outputs.stdout }}' | jq '.' > output/prod.json
          git config --global user.name 'Terraform Output Github Workflow'
          git config --global user.email '<>'
          output=$(git status --porcelain)
          if [ -n "$output" ]
          then
            git add -A
            git commit -m "Commit prod output"
            git push
            git fetch origin release
            git checkout release
            git cherry-pick main
            git push
          fi
